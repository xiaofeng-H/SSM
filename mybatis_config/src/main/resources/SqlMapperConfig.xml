<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!--核心配置文件-->

<configuration>
    <!--通过properties标签加载外部properties文件-->
    <properties resource="jdbc.properties"></properties>

    <!--定义别名(设置类型别名)-->
    <typeAliases>
        <typeAlias type="pers.xiaofeng.domain.User" alias="user"></typeAlias>
    </typeAliases>

    <!--注册类型处理器-->
    <typeHandlers>
        <typeHandler handler="pers.xiaofeng.handler.DateTypeHandler"></typeHandler>
    </typeHandlers>

    <!--数据源的环境:
        default:指定默认的环境名称
    -->
    <environments default="developmentZX">
        <!--id:指定当前环境的名称-->
        <environment id="development">
            <!--type:指定事务管理类型是JDBC-->
            <!--JDBC:这个配置就是直接使用了JDBC的提交和回滚设置,它依赖于从数据源得到的连接来管理事务作用域
                MANAGED:这个配置几乎没做什么.它从来不提交或回滚一个连接,而是让容器来管理事务的整个生命周期(比如JEE应用服务器的上下文).
                        默认情况下它会关闭连接,然后一些容器并不希望这样,因此需要将closeConnection属性设置为false来阻止它默认的关闭行为
            -->
            <transactionManager type="JDBC"></transactionManager>
            <!--type:指定当前数据源类型是连接池-->
            <!--UNPOOLED:这个数据源的实现只是每次被请求时打开和关闭连接.
                POOLED:这个数据源的实现利用"池"的概念将JDBC连接对象组织起来.
                JNDI:这个数据源的实现是为了能在如EJB或应用服务器这类容器中使用,容器可以集中或在外部配置数据源,然后放置一个JNDI上下文引用
            -->
            <dataSource type="POOLED">
                <!--数据源配置的基本参数-->
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>

        <environment id="developmentZX">
            <transactionManager type="JDBC"></transactionManager>
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://192.168.50.95:3306/lyx_db_1"/>
                <property name="username" value="qp_2020_dev_user"/>
                <property name="password" value="qp_2020_dev_user123"/>
            </dataSource>
        </environment>
    </environments>

    <!--加载映射文件(加载映射配置)-->
    <mappers>
        <mapper resource="pers.xiaofeng.mapper/UserMapper.xml"></mapper>
    </mappers>

    
</configuration>